# Just goofing around with GitHub actions, nothing to see here.
## Resources:
## https://www.dotnetapp.com/github-actions-for-uwp-apps-the-good-and-the-bad-and-the-ugly/


name: My App Builder

on:
  push:
    branches: 
    - "**"
    tags:
    - v*

jobs:
  release:
    runs-on: windows-latest

    env:
      Solution_Path: SaorCon.sln
      UWP_Project_Path: SaorCon/SaorCon.csproj
      UWP_Project_Directory: .\SaorCon

    steps:

    - name: Configure Pagefile
      uses: al-cheb/configure-pagefile-action@v1.2
      with:
        minimum-size: 32GB
        maximum-size: 32GB
        disk-root: "C:"
    
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: 'Get Previous tag'
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"
      with:
        fallback: 1.0.0 # Optional fallback tag to use when no tag can be found

    - name: Echo tag
      run: echo ${{steps.previoustag.outputs.tag}}

#     - name: Extract version from tag
#       uses: Amadevus/pwsh-script@v1
#       id: getVersion
#       with:
#         script: '("${{steps.tag.outputs.tag}}").Split("v")[1]'


    - name: Update version
      run: |
        $path = ".\SaorCon\Properties\AssemblyInfo.cs"
        $pattern = '^\[assembly: AssemblyVersion\("(.*)"\)\]$'

        (Get-Content $path) | ForEach-Object {
          if($_ -match $pattern){
          # We have found the matching line
          # Edit the version number and put back.
                $fileVersion = [version]$matches[1]
                $newVersion = "{0}.{1}.{2}.{3}" -f $fileVersion.Major, $fileVersion.Minor, $fileVersion.Build, ($fileVersion.Revision + 1)
                $date = Get-Date -format yyyy-MM-dd 
                '[assembly: AssemblyVersion("{0}-{1}")]' -f $newVersion, $date
            } else {
                # Output line as is
                $_
            }
        } | Set-Content $path
        cat $path


    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.1
        
    - name: Build the sideload solution
      run: msbuild $env:Solution_Path /p:Platform=x86 /p:AppxBundle=$env:AppxBundle /p:AppxBundlePlatforms="x86|x64" /p:AppxPackageDir=C:\DeployOutput /restore
      env:
        AppxBundle: Always
        BuildMode: StoreUpload
        Configuration: Release
   
    - name: Create archive
      run: Compress-Archive -Path .\SaorCon\bin\Release\* -DestinationPath .\SaorCon\bin\Release\StorePackage_${{steps.previoustag.outputs.tag}}.zip

    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    
    - name: Check outputs
      run: echo ${{ steps.vars.outputs.sha_short }}

    - uses: dev-drprasad/delete-older-releases@v0.2.0
      with:
        # delete older releases for my WIP playground/fork
        keep_latest: 0 
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
#         tag_name: ${{ steps.previoustag.outputs.tag }}-forked
#         release_name: ${{steps.previoustag.outputs.tag}}-forked
        tag_name: ${{steps.previoustag.outputs.tag}}
        release_name: ${{steps.previoustag.outputs.tag}}-${{ steps.vars.outputs.sha_short }}
        draft: false
        prerelease: false

    - name: Update release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
#         asset_path: .\SaorCon\bin\Release\app.publish\SaorCon.exe
        asset_path: .\SaorCon\bin\Release\StorePackage_${{steps.previoustag.outputs.tag}}.zip
        asset_name: StorePackage_${{steps.previoustag.outputs.tag}}.zip
        asset_content_type: application/zip
